# nama pipeline
name: Karsajobs CI Pipepline 
# trigger pipeline otomatis ketika ada push ke branch karsajobs
on:
  push:
    branches: [ "karsajobs" ]
  # agar pipeline bisa di-trigger secara manual melalui Tab Actions
  workflow_dispatch:
# menentukan apa saja yg ada dlm pipeline
jobs:
  # langkah untuk lint-dockerfile
  lint-dockerfile:
    # menggunakan self hosted runner dengan label dicoding-microservices dan self-hosted
    runs-on: [self-hosted, dicoding-microservices]
    steps:
      # checkout repo
      - name: check out repo 
        uses: actions/checkout@v3
      # mengecek Dockerfile dengan menggunakan hadolint
      - name: check Dockerfile dengan menggunakan hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          # path Dockerfile
          dockerfile: Dockerfile
  # langkah untuk test-app
  test-app:
    runs-on: [self-hosted, dicoding-microservices]
    # agar langkah test-app dijalankan setelah lint-dockerfile
    needs: lint-dockerfile
    steps:
      - name: menjalankan unit test untuk backend
        run: go test -v -short --count=1 $(go list ./...) 
  # langkah untuk build-app-karsajobs
  build-app-karsajobs:
    # menggunakan self hosted runner dengan label dicoding-microservices dan self-hosted
    runs-on: [self-hosted, dicoding-microservices]
    # agar langkah build-app-karsajobs dijalankan setelah test-app
    needs: test-app
    steps:
      # Login ghcr
      - name: login to ${{ vars.CR_URL }}
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.CR_URL }}
          username: ${{ secrets.CR_USERNAME }}
          password: ${{ secrets.CR_PAT }}   
      # Image Metadata
      - name: ${{ vars.CR_REPOSITORY }} metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ vars.CR_URL }}/${{ secrets.CR_USERNAME }}/${{ vars.CR_REPOSITORY }}
          tags: type=raw,value=${{ vars.CR_TAG }},enable=true 
      # Build dan Push Image
      - name: build and push docker image ${{ vars.CR_REPOSITORY }}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}